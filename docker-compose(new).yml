version: "3.8"

services:
  kafka:
    image: bitnami/kafka:3.6.0
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:24.1
    environment:
      - CLICKHOUSE_DB=newjitsu_metrics
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    restart: unless-stopped

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER=${POSTGRES_USER}
      POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  console:
    image: jitsucom/console:latest
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=newjitsu
      CLICKHOUSE_HOST: clickhouse:8123
      CLICKHOUSE_DATABASE: newjitsu_metrics
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo/
      BULKER_URL: http://bulker:3042
      ROTOR_URL: http://rotor:3401
      ROTOR_AUTH_KEY: ${RAW_AUTH_TOKEN}
      BULKER_AUTH_KEY: ${RAW_AUTH_TOKEN}
      CONSOLE_RAW_AUTH_TOKENS: ${RAW_AUTH_TOKEN}
      JITSU_INGEST_PUBLIC_URL: http://${DOMAIN_NAME}/
      JITSU_PUBLIC_URL: http://${DOMAIN_NAME}/
      NEXTAUTH_URL: http://${DOMAIN_NAME}/
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - clickhouse
    restart: unless-stopped

  bulker:
    image: jitsucom/bulker:latest
    environment:
      BULKER_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      BULKER_RAW_AUTH_TOKENS: ${RAW_AUTH_TOKEN}
      BULKER_CONFIG_SOURCE: http://console:3000/api/admin/export/bulker-connections
      BULKER_CONFIG_SOURCE_HTTP_AUTH_TOKEN: ${SERVICE_AUTH_TOKEN}
      BULKER_INTERNAL_TASK_LOG: '{"id":"task_log","metricsKeyPrefix":"syncs","usesBulker":true,"type":"postgres","options":{"mode":"stream"},"credentials":{"host":"postgres","port":5432,"database":"${POSTGRES_DB}","password":"${POSTGRES_PASSWORD}","username":"${POSTGRES_USER}","defaultSchema":"newjitsu"}}'
      BULKER_CLICKHOUSE_HOST: clickhouse:8123
      BULKER_CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      BULKER_CLICKHOUSE_DATABASE: newjitsu_metrics
    ports:
      - "3042:3042"
    restart: unless-stopped

  rotor:
    image: jitsucom/rotor:latest
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      BULKER_URL: http://bulker:3042
      BULKER_AUTH_KEY: ${RAW_AUTH_TOKEN}
      REPOSITORY_BASE_URL: http://console:3000/api/admin/export/
      REPOSITORY_AUTH_TOKEN: ${SERVICE_AUTH_TOKEN}
      MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo/
      CLICKHOUSE_HOST: clickhouse:8123
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DATABASE: newjitsu_metrics
    ports:
      - "3401:3401"
    restart: unless-stopped

  ingest:
    image: jitsucom/ingest:latest
    environment:
      INGEST_PUBLIC_URL: http://${DOMAIN_NAME}/
      INGEST_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INGEST_RAW_AUTH_TOKENS: ${RAW_AUTH_TOKEN}
      INGEST_REPOSITORY_URL: http://console:3000/api/admin/export/streams-with-destinations
      INGEST_SCRIPT_ORIGIN: http://console:3000/api/s/javascript-library
      INGEST_REPOSITORY_AUTH_TOKEN: ${SERVICE_AUTH_TOKEN}
      INGEST_CLICKHOUSE_HOST: clickhouse:8123
      INGEST_CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      INGEST_CLICKHOUSE_DATABASE: newjitsu_metrics
    ports:
      - "8080:3049"
    restart: unless-stopped

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/certs:ro
    depends_on:
      - console
      - ingest
    restart: unless-stopped

volumes:
  kafka_data:
  pg_data:
  mongo_data:
  clickhouse_data:
